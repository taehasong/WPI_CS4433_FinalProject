[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\sophi\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\sophi\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.9 (Oracle Corporation Java 1.8.0_441)
[debug]       Load.loadUnit: plugins took 229.758ms
[debug]       Load.loadUnit: defsScala took 0.415ms
[debug] [Loading] Scanning directory C:\Users\sophi\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\sophi\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 23.0323 ms
[debug]           Load.resolveProject(global-plugins) took 65.7359ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\sophi\.sbt\1.0\plugins, plugins: List(<none>))) took 117.7497ms
[debug] [Loading] Done in C:\Users\sophi\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 147.2258ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4006ms
[debug]     Load.loadUnit(file:/C:/Users/sophi/.sbt/1.0/plugins/, ...) took 388.7141ms
[debug]   Load.apply: load took 690.6389ms
[debug]   Load.apply: resolveProjects took 9.4623ms
[debug]   Load.apply: finalTransforms took 74.769ms
[debug]   Load.apply: config.delegates took 10.7011ms
[debug]   Load.apply: Def.make(settings)... took 522.6633ms
[debug]   Load.apply: structureIndex took 125.9469ms
[debug]   Load.apply: mkStreams took 2.9337ms
[info] loading global plugins from C:\Users\sophi\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3043.5096ms
[debug]           Load.loadUnit: plugins took 63.2826ms
[debug]           Load.loadUnit: defsScala took 0.0108ms
[debug] [Loading] Scanning directory C:\Users\sophi\IdeaProjects\FinalProject_CS4433_nocsv\project
[debug]             Load.loadUnit: mkEval took 10.7119ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\sophi\IdeaProjects\FinalProject_CS4433_nocsv\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.801 ms
[info] loading settings for project finalproject_cs4433_nocsv-build from idea1.sbt...
[debug]               Load.resolveProject(finalproject_cs4433_nocsv-build) took 5.4788ms
[debug]             Load.loadTransitive: finalizeProject(Project(id finalproject_cs4433_nocsv-build, base: C:\Users\sophi\IdeaProjects\FinalProject_CS4433_nocsv\project, plugins: List(<none>))) took 10.2308ms
[debug] [Loading] Done in C:\Users\sophi\IdeaProjects\FinalProject_CS4433_nocsv\project, returning: (finalproject_cs4433_nocsv-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2834.0834ms
[debug]           Load.loadUnit: cleanEvalClasses took 13.7329ms
[debug]         Load.loadUnit(file:/C:/Users/sophi/IdeaProjects/FinalProject_CS4433_nocsv/project/, ...) took 2913.272ms
[debug]       Load.apply: load took 2915.8885ms
[debug]       Load.apply: resolveProjects took 0.2283ms
[debug]       Load.apply: finalTransforms took 11.9634ms
[debug]       Load.apply: config.delegates took 0.4625ms
[debug]       Load.apply: Def.make(settings)... took 87.4124ms
[debug]       Load.apply: structureIndex took 47.7377ms
[debug]       Load.apply: mkStreams took 0.0175ms
[info] loading project definition from C:\Users\sophi\IdeaProjects\FinalProject_CS4433_nocsv\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4980.2024ms
[debug]     Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory C:\Users\sophi\IdeaProjects\FinalProject_CS4433_nocsv
[debug]       Load.loadUnit: mkEval took 0.3812ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.7961 ms
[info] loading settings for project root from build.sbt...
[debug]         Load.resolveProject(root) took 37.7155ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\sophi\IdeaProjects\FinalProject_CS4433_nocsv, plugins: List(<none>))) took 43.6634ms
[debug] [Loading] Done in C:\Users\sophi\IdeaProjects\FinalProject_CS4433_nocsv, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1095.6968ms
[debug]     Load.loadUnit: cleanEvalClasses took 12.8949ms
[debug]   Load.loadUnit(file:/C:/Users/sophi/IdeaProjects/FinalProject_CS4433_nocsv/, ...) took 6089.44ms
[debug] Load.apply: load took 6091.7797ms
[debug] Load.apply: resolveProjects took 0.1233ms
[debug] Load.apply: finalTransforms took 22.083ms
[debug] Load.apply: config.delegates took 0.2028ms
[debug] Load.apply: Def.make(settings)... took 46.1877ms
[debug] Load.apply: structureIndex took 15.9268ms
[debug] Load.apply: mkStreams took 0.0036ms
[info] set current project to FinalProject_CS4433 (in build file:/C:/Users/sophi/IdeaProjects/FinalProject_CS4433_nocsv/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 64239 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 64239, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to FinalProject_CS4433 (in build file:/C:/Users/sophi/IdeaProjects/FinalProject_CS4433_nocsv/)
[debug] > Exec(idea-shell, None, None)
